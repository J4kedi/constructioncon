import { execSync } from 'child_process';

const sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));

async function main() {
  const args = process.argv.slice(2);
  const isForce = args.includes('--force');

  if (!isForce) {
    console.warn(`
      ###################################################################################
      #                                                                                 #
      #  ATEN√á√ÉO: Este script destruir√° e recriar√° completamente o banco de dados.      #
      #                                                                                 #
      #  Para confirmar a execu√ß√£o, rode o comando com o argumento --force.             #
      #  Exemplo: pnpm run setup:dev -- --force                                         #
      #                                                                                 #
      ###################################################################################
    `);
    return;
  }

  console.log('üöÄ Iniciando a configura√ß√£o completa do ambiente de desenvolvimento (modo for√ßado)...');

  try {
    console.log('\n--- Etapa 1: Destruindo ambiente Docker existente (incluindo volumes)... ---');
    execSync('docker-compose down -v', { stdio: 'inherit' });
    console.log('‚úÖ Ambiente Docker anterior destru√≠do.');

    console.log('\n--- Etapa 2: Iniciando um novo ambiente Docker... ---');
    execSync('docker-compose up -d', { stdio: 'inherit' });
    console.log('‚úÖ Cont√™ineres do Docker iniciados em background.');

    const waitTime = 20;
    console.log(`\n--- Etapa 3: Aguardando ${waitTime} segundos para o banco de dados iniciar... ---`);
    await sleep(waitTime * 1000);
    console.log('‚úÖ Tempo de espera conclu√≠do.');

    console.log('\n--- Etapa 4: Resetando o schema public... ---');
    execSync('pnpm prisma migrate reset --force', {
      stdio: 'inherit',
      env: {
        ...process.env,
        PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION: 'yes',
      },
    });
    console.log('‚úÖ Banco de dados resetado com sucesso.');

    console.log('\n--- Etapa 5: Executando o seed do ambiente de demonstra√ß√£o... ---');
    execSync('pnpm run db:seed:demo', { stdio: 'inherit' });
    console.log('‚úÖ Seed de demonstra√ß√£o conclu√≠do.');

    console.log('\nüéâ Ambiente de desenvolvimento configurado com sucesso! üéâ');
    console.log('Voc√™ pode agora iniciar a aplica√ß√£o com: pnpm run dev');

  } catch (error) {
    console.error('\n‚ùå Ocorreu um erro durante a configura√ß√£o do ambiente:', error);
    process.exit(1);
  }
}

main();